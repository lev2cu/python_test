from pandas import Series, DataFrame
import pandas as pd

Clean data:
dataFrame.dropna() 	drop rows/col even if it has a single null value
dataFrame.dropna(howw='all')	drop only ALL null rows/col
dataFrame.fillna(0)		replace null values with a "0" 
dataFrame.fillna(method='ffill')	fills all the null by previous value in col
INDEX:
Method	 		Description
append	 		Concatenate with additional Index objects, producing a new Index diff Compute set difference as an Index
intersection 		Compute set intersection
union		 	Compute set union
isin 			Compute boolean array indicating whether each value is contained in the passed collection delete Compute new Index with element at index i deleted
drop 			Compute new index by deleting passed values
insert 			Compute new Index by inserting element at index i
is_monotonic 		Returns True if each element is greater than or equal to the previous element is_unique Returns True if the Index has no duplicate values
unique	 		Compute the array of unique values in the Index

REINDEX:

Argument 	ffill or pad bfill or backfill
Description	Fill (or carry) values forward Fill (or carry) values backward


Mapping:
format = lambda x: '%.2f' %x
frame.applymap(format)		compute a formated string for all value in the frame
frame['single_element'].map(format) 	element wise map method


Sorting series & frame:
frame.sort_index()	sorting frame
frame.sort_index(by = ['col1','col2']) 	sort in muli-colums using "by" options
obj.order()		sort a series by its values 

Statistics:
frame.describe 	summary statistics such as count, mean, std, min, 25%, 50%, 75%, max (non-number data: count, unique, top, freq)


