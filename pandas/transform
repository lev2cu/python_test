

#mapping function 

data.replace(val,elem)
data.index.map(str.upper)

#binning ftn
data.labels
data.levels
pd.cut(data, 4, precision=2)
pd.qcut(data, 4) # Cut into quartiles

pd.value_counts(data)


# outliers
data[(np.abs(data) > 3).any(1)]
data[np.abs(data)>3] = np.sign(data)*3

# dummy 
data1 = pd.get_dummies(df['key'])
... df_wit_dummy = df[['data1']].join(dummies)

#cleaning
import re   	#regular expression
re.split('\s+', text)
re.compile 	# apply same expressione
re.IGNORECASE makes the regex case-insensitive

regex.sub('to_replace', text)
